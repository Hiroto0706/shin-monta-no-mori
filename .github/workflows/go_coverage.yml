name: Go Test Coverage by Directory

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - "**/*_test.go"

jobs:
  test_coverage:
    name: Go Test and Coverage Report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.22.2"

      - name: Launch services
        run: docker-compose up -d

      - name: Install Migrate Tool
        run: go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest

      - name: Set execute permission for the script
        run: chmod +x ./tools/aggregate_coverage.sh

      - name: Run Go Test and generate coverage
        env:
          TEST_DATABASE_URL: postgresql://postgres:password@localhost:5432/shin-monta-no-mori-test?sslmode=disable
        run: |
          mkdir -p coverage
          docker exec shin-monta-no-mori-db dropdb --username=postgres --if-exists shin-monta-no-mori-test
          docker exec shin-monta-no-mori-db createdb --username=postgres --owner=postgres shin-monta-no-mori-test
          migrate -path server/internal/db/migration -database "${{ env.TEST_DATABASE_URL }}" -verbose up

          # 各サブディレクトリのテストを実行し、個別のカバレッジファイルを生成
          go test ./server/api/admin/... -coverprofile=./coverage/api_admin.out
          go test ./server/api/user/... -coverprofile=./coverage/api_user.out
          go test ./server/api/middleware/... -coverprofile=./coverage/api_middleware.out
          go test ./server/pkg/... -coverprofile=./coverage/pkg.out
          go test ./server/internal/db/... -coverprofile=./coverage/db.out
          go test ./server/internal/domains/... -coverprofile=./coverage/domains.out

          # カバレッジファイルの適切な結合
          echo "mode: set" > ./coverage/coverage.out
          tail -n +2 ./coverage/api_admin.out >> ./coverage/coverage.out
          tail -n +2 ./coverage/api_user.out >> ./coverage/coverage.out
          tail -n +2 ./coverage/api_middleware.out >> ./coverage/coverage.out
          tail -n +2 ./coverage/pkg.out >> ./coverage/coverage.out
          tail -n +2 ./coverage/db.out >> ./coverage/coverage.out
          tail -n +2 ./coverage/domains.out >> ./coverage/coverage.out

          go tool cover -func=./coverage/coverage.out > coverage/report.txt
          go tool cover -html=./coverage/coverage.out -o ./coverage/coverage.html
          ./tools/aggregate_coverage.sh coverage/report.txt > coverage/summary.txt
          echo "COVERAGE_REPORT<<EOF" >> $GITHUB_ENV
          cat coverage/summary.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Stop and remove services
        run: docker-compose down

      - name: Post coverage results to PR
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## Test Coverage Report
            ```
            ${{ env.COVERAGE_REPORT }}
            ```
