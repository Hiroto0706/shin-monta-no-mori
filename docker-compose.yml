version: '3.9'

services:
  server:
    container_name: server
    build: ./server
    volumes:
      - ./server:/app
    ports:
      - "8080:8080"
    env_file:
      - ./server/app.env
    environment:
      - GO111MODULE=on
    depends_on:
      - db
      - redis
      - migrate

  client:
    container_name: client
    build: ./client
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - "3000:3000"

  db:
    container_name: db
    restart: always
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    env_file:
      - ./server/app.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-q", "-U", "${DB_USER:-postgres}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis
    image: redis:7.4.0-alpine3.20
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis_data:/var/lib/redis/data

  migrate:
    container_name: migrate
    image: migrate/migrate:latest
    env_file:
      - ./server/app.env
    command: [
      "-path", "migrations",
      "-database", "postgres://${DB_USER:-postgres}:${DB_PASSWORD:-password}@${DB_HOST:-db}:5432/${DB_NAME:-shin-monta-no-mori}?sslmode=disable",
      "up"
    ]
    volumes:
      - ./server/internal/db/migration:/migrations
    depends_on:
      - db

volumes:
  postgres_data:
  redis_data:
